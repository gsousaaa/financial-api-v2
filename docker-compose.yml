version: '3'

services:
  db:
    image: mysql:5.7
    container_name: financialv2
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DB}
    networks:
      - api-network
    restart: 'always'
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql # Executa o script SQL ao iniciar o banco de dados

  api:
    image: financial-api-v2:1.2
    container_name: financial-api
    environment:
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_PORT: ${MYSQL_PORT_DOCKER}
      MYSQL_HOST: ${MYSQL_HOST_DOCKER}
    ports:
      - "3003:3003"
    networks:
      - api-network
    depends_on:
      - db
    volumes:
      - ./src:/app/src # Mapeia o diretório local src para o diretório src no container
      - /app/node_modules # Isso evita que o volume sobrescreva os node_modules instalados no container

networks:
  api-network:
    driver: bridge
